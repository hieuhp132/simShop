import React, { useState, useMemo, useContext, useEffect } from 'react';
import styles from './MainContent.module.css';
import { useTranslation } from 'react-i18next';
import { countryDataMap } from '../assets/data/adjusted/countryDataIndex';
import { BalanceContext } from './TopNav';
import LoginForm from './LoginForm';
import { FaGoogle, FaEye, FaEyeSlash } from 'react-icons/fa';
import axios from 'axios';
import PaymentPage from './PaymentPage';
import { API_BASE_URL } from '../apiConfig';

function MainContent({ activePage, setActivePage, onLoginSuccess, user, priceTab, setPriceTab }) {
  const [priceSortBy, setPriceSortBy] = useState('rate');
  const [priceSortOrder, setPriceSortOrder] = useState('desc');
  const [filterService, setFilterService] = useState('all');
  const [filterCountry, setFilterCountry] = useState('all');
  const [statsSortBy, setStatsSortBy] = useState('rate');
  const [statsSortOrder, setStatsSortOrder] = useState('desc');
  const [hoveredBar, setHoveredBar] = useState(null);
  const [faqDetail, setFaqDetail] = useState(null);
  const { t } = useTranslation();
  const { balance, currency } = useContext(BalanceContext);
  const RUB_TO_VND = 330;

  // Mapping flag cho c√°c qu·ªëc gia
  const countryFlagMap = {
    'vietnam': 'üáªüá≥', 'usa': 'üá∫üá∏', 'russia': 'üá∑üá∫', 'england': 'üá¨üáß', 'italy': 'üáÆüáπ',
    'spain': 'üá™üá∏', 'france': 'üá´üá∑', 'germany': 'üá©üá™', 'china': 'üá®üá≥', 'japan': 'üáØüáµ',
    'korea': 'üá∞üá∑', 'india': 'üáÆüá≥', 'brazil': 'üáßüá∑', 'canada': 'üá®üá¶', 'australia': 'üá¶üá∫',
    'netherlands': 'üá≥üá±', 'poland': 'üáµüá±', 'ukraine': 'üá∫üá¶', 'belarus': 'üáßüáæ',
    'moldova': 'üá≤üá©', 'georgia': 'üá¨üá™', 'latvia': 'üá±üáª', 'lithuania': 'üá±üáπ',
    'croatia': 'üá≠üá∑', 'slovenia': 'üá∏üáÆ', 'slovakia': 'üá∏üá∞', 'greece': 'üá¨üá∑',
    'cyprus': 'üá®üáæ', 'portugal': 'üáµüáπ', 'ireland': 'üáÆüá™', 'finland': 'üá´üáÆ',
    'sweden': 'üá∏üá™', 'norway': 'üá≥üá¥', 'denmark': 'üá©üá∞', 'switzerland': 'üá®üá≠',
    'austria': 'üá¶üáπ', 'belgium': 'üáßüá™', 'malaysia': 'üá≤üáæ', 'singapore': 'üá∏üá¨',
    'thailand': 'üáπüá≠', 'philippines': 'üáµüá≠', 'indonesia': 'üáÆüá©', 'cambodia': 'üá∞üá≠',
    'laos': 'üá±üá¶', 'myanmar': 'üá≤üá≤', 'bangladesh': 'üáßüá©', 'pakistan': 'üáµüá∞',
    'sri_lanka': 'üá±üá∞', 'nepal': 'üá≥üáµ', 'afghanistan': 'üá¶üá´', 'iran': 'üáÆüá∑',
    'iraq': 'üáÆüá∂', 'syria': 'üá∏üáæ', 'lebanon': 'üá±üáß', 'jordan': 'üáØüá¥',
    'israel': 'üáÆüá±', 'saudi_arabia': 'üá∏üá¶', 'yemen': 'üáæüá™', 'oman': 'üá¥üá≤',
    'uae': 'üá¶üá™', 'qatar': 'üá∂üá¶', 'bahrain': 'üáßüá≠', 'kuwait': 'üá∞üáº',
    'egypt': 'üá™üá¨', 'libya': 'üá±üáæ', 'tunisia': 'üáπüá≥', 'algeria': 'üá©üáø',
    'morocco': 'üá≤üá¶', 'senegal': 'üá∏üá≥', 'liberia': 'üá±üá∑', 'ghana': 'üá¨üá≠',
    'togo': 'üáπüá¨', 'nigeria': 'üá≥üá¨', 'ethiopia': 'üá™üáπ', 'kenya': 'üá∞üá™',
    'uganda': 'üá∫üá¨', 'tanzania': 'üáπüáø', 'malawi': 'üá≤üáº', 'angola': 'üá¶üá¥',
    'argentina': 'üá¶üá∑', 'chile': 'üá®üá±', 'uruguay': 'üá∫üáæ', 'paraguay': 'üáµüáæ',
    'bolivia': 'üáßüá¥', 'peru': 'üáµüá™', 'ecuador': 'üá™üá®', 'colombia': 'üá®üá¥',
    'venezuela': 'üáªüá™', 'mexico': 'üá≤üáΩ', 'guatemala': 'üá¨üáπ', 'honduras': 'üá≠üá≥',
    'haiti': 'üá≠üáπ', 'dominican_republic': 'üá©üá¥', 'cuba': 'üá®üá∫', 'jamaica': 'üáØüá≤'
  };

  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [showPassword, setShowPassword] = useState(false);
  const [loading, setLoading] = useState(false);
  const [tabOrders, setTabOrders] = useState('active');
  const [purchaseTab, setPurchaseTab] = useState('active');
  const [isLoading, setIsLoading] = useState(false);

  const handleLogin = async (e) => {
    e.preventDefault();
    setError("");
    setLoading(true);
    try {
      const response = await axios.post(
        `${API_BASE_URL}/api/auth/login`,
        { email, password },
        { withCredentials: true }
      );
      if (response.data.success) {
        onLoginSuccess && onLoginSuccess(response.data);
      } else {
        setError("ƒêƒÉng nh·∫≠p th·∫•t b·∫°i!");
      }
    } catch (err) {
      setError("Sai t√†i kho·∫£n ho·∫∑c m·∫≠t kh·∫©u!");
    }
    setLoading(false);
  };

  // Khi app kh·ªüi ƒë·ªông, flatten countryDataMap th√†nh flatData (ch·ªâ build l·∫°i khi countryDataMap thay ƒë·ªïi)
  const flatData = useMemo(() => {
    if (!countryDataMap || Object.keys(countryDataMap).length === 0) return [];
    
    const rows = [];
    Object.entries(countryDataMap).forEach(([countryKey, countryObj]) => {
      if (!countryObj[countryKey]) return;
      Object.entries(countryObj[countryKey]).forEach(([service, operators]) => {
        Object.entries(operators).forEach(([operator, info]) => {
          rows.push({
            service,
            country: countryKey.charAt(0).toUpperCase() + countryKey.slice(1),
            operator,
            price: info.cost,
            count: info.count,
            rate: info.rate ?? null,
            flag: countryFlagMap[countryKey] || 'üè≥Ô∏è'
          });
        });
      });
    });

    return rows;
  }, [countryDataMap]);

  // T·ªëi ∆∞u h√≥a performance v·ªõi useMemo
  const priceData = useMemo(() => flatData, [flatData]);
  const statsData = useMemo(() => flatData.filter(row => typeof row.rate === 'number' && typeof row.price === 'number'), [flatData]);

  // allKey lu√¥n l√† 'all'
  const allKey = 'all';
  
  const serviceOptions = useMemo(() => [allKey, ...Array.from(new Set(priceData.map(row => row.service)))], [priceData]);
  const countryOptions = useMemo(() => [allKey, ...Array.from(new Set(priceData.map(row => row.country)))], [priceData]);

  const filteredPriceData = useMemo(() => priceData.filter(row =>
    (filterService === allKey || row.service === filterService) &&
    (filterCountry === allKey || row.country === filterCountry) &&
    (row.rate === null || row.rate !== 100)
  ), [priceData, filterService, filterCountry]);

  const sortedPriceData = useMemo(() => {
    const sorted = [...filteredPriceData].sort((a, b) => {
      if (priceSortBy === 'rate') {
        if (a.rate === null) return 1;
        if (b.rate === null) return -1;
        return priceSortOrder === 'desc' ? b.rate - a.rate : a.rate - b.rate;
      }
      if (priceSortBy === 'price') return priceSortOrder === 'desc' ? b.price - a.price : a.price - b.price;
      if (priceSortBy === 'country') return priceSortOrder === 'desc' ? b.country.localeCompare(a.country) : a.country.localeCompare(b.country);
      if (priceSortBy === 'service') return priceSortOrder === 'desc' ? b.service.localeCompare(a.service) : a.service.localeCompare(b.service);
      return 0;
    });

    return sorted;
  }, [filteredPriceData, priceSortBy, priceSortOrder]);

  const sortedStatsData = useMemo(() => {
    const sorted = [...statsData].sort((a, b) => {
      if (statsSortBy === 'rate') return statsSortOrder === 'desc' ? b.rate - a.rate : a.rate - b.rate;
      if (statsSortBy === 'price') return statsSortOrder === 'desc' ? b.price - a.price : a.price - b.price;
      if (statsSortBy === 'country') return statsSortOrder === 'desc' ? b.country.localeCompare(a.country) : a.country.localeCompare(b.country);
      return 0;
    });
    return sorted.slice(0, 20); // TƒÉng l√™n 20 rows ƒë·ªÉ hi·ªÉn th·ªã nhi·ªÅu h∆°n
  }, [statsData, statsSortBy, statsSortOrder]);
  // L·∫•y danh s√°ch d·ªãch v·ª• v√† qu·ªëc gia cho dropdown
  const countryNameMap = {
    'Vi·ªát Nam': t('country_vietnam'),
    'Hoa K·ª≥': t('country_usa'),
    'Nga': t('country_russia'),
    'Nh·∫≠t B·∫£n': t('country_japan'),
    // ... b·ªï sung th√™m n·∫øu c√≥ ...
  };

  // Danh s√°ch c√¢u h·ªèi v√† n·ªôi dung chi ti·∫øt
  const faqDetails = {
    'Khi n√†o c√≥ s·ªë m·ªõi ƒë∆∞·ª£c th√™m v√†o?': {
      title: 'Khi n√†o c√≥ s·ªë m·ªõi ƒë∆∞·ª£c th√™m v√†o?',
      content: (
        <>
          <p>Th√¥ng tin v·ªÅ vi·ªác b·ªï sung s·ªë m·ªõi cho c√°c qu·ªëc gia Nga, Anh, H√† Lan, Ph√°p, Kazakhstan c√≥ th·ªÉ theo d√µi tr√™n Telegram <a href="https://t.me/new_numbers_5sim" target="_blank" rel="noopener noreferrer">https://t.me/new_numbers_5sim</a>.</p>
          <p>5SIM c≈©ng c√≥ k√™nh tin t·ª©c tr√™n Telegram <a href="https://t.me/news_en_5sim" target="_blank" rel="noopener noreferrer">https://t.me/news_en_5sim</a>.</p>
          <p>S·ªë c·ªßa c√°c nh√† m·∫°ng Virtual4 s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t v√†o 6-8h s√°ng v√† 18-21h t·ªëi (gi·ªù Moscow). C√°c nh√† m·∫°ng kh√°c th∆∞·ªùng ƒë∆∞·ª£c c·∫≠p nh·∫≠t h√†ng ng√†y.</p>
        </>
      ),
    },
    'T√†i kho·∫£n v·ª´a t·∫°o b·ªã kh√≥a sau m·ªôt th·ªùi gian': {
      title: 'T√†i kho·∫£n v·ª´a t·∫°o b·ªã kh√≥a sau m·ªôt th·ªùi gian',
      content: (
        <>
          <p>Theo quy ƒë·ªãnh c·ªßa 5SIM, ch√∫ng t√¥i kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ vi·ªác t√†i kho·∫£n b·ªã kh√≥a do nhi·ªÅu nguy√™n nh√¢n kh√°c nhau. Kh√¥ng ho√†n ti·ªÅn ho·∫∑c thay th·∫ø s·ªë trong tr∆∞·ªùng h·ª£p n√†y.</p>
          <p>M·ªôt trong c√°c l√Ω do ph·ªï bi·∫øn l√† IP v√† v·ªã tr√≠ ƒë·ªãa l√Ω kh√¥ng kh·ªõp v·ªõi s·ªë ƒëi·ªán tho·∫°i mua. H√£y s·ª≠ d·ª•ng proxy/VPN ch·∫•t l∆∞·ª£ng cao, m·ªói t√†i kho·∫£n n√™n d√πng proxy kh√°c nhau.</p>
          <ul>
            <li>D√πng thi·∫øt b·ªã kh√°c nhau cho m·ªói t√†i kho·∫£n.</li>
            <li>Kh√¥ng d√πng s·ªë ·∫£o cho t√†i kho·∫£n ch√≠nh, t√†i kho·∫£n quan tr·ªçng.</li>
            <li>Kh√¥ng th·ª±c hi·ªán h√†nh vi spam, t·ª± ƒë·ªông h√≥a b·∫•t th∆∞·ªùng.</li>
          </ul>
        </>
      ),
    },
    'C√≥ s·ªë tr√™n website nh∆∞ng kh√¥ng th·ªÉ mua ƒë∆∞·ª£c': {
      title: 'C√≥ s·ªë tr√™n website nh∆∞ng kh√¥ng th·ªÉ mua ƒë∆∞·ª£c',
      content: (
        <>
          <p>C√≥ hai l√Ω do ch√≠nh:</p>
          <ol>
            <li>M·ªôt s·ªë nh√† m·∫°ng nh∆∞ virtual4, virtual7 kh√¥ng th·ªÉ hi·ªÉn th·ªã ch√≠nh x√°c s·ªë l∆∞·ª£ng. H√£y th·ª≠ ƒë·ªïi nh√† m·∫°ng ho·∫∑c qu·ªëc gia.</li>
            <li>H·ªá th·ªëng c√≥ c∆° ch·∫ø ƒë√°nh gi√°. N·∫øu b·∫°n b·∫•m "H·ªßy" ho·∫∑c "Ban" nhi·ªÅu l·∫ßn, t√†i kho·∫£n c√≥ th·ªÉ b·ªã kh√≥a mua s·ªë trong 1 gi·ªù.</li>
          </ol>
        </>
      ),
    },
    'S·ªë t·∫°m th·ªùi l√† g√¨?': {
      title: 'S·ªë t·∫°m th·ªùi l√† g√¨?',
      content: (
        <>
          <p>S·ªë t·∫°m th·ªùi l√† s·ªë d√πng m·ªôt l·∫ßn ƒë·ªÉ ƒëƒÉng k√Ω, x√°c th·ª±c t√†i kho·∫£n tr√™n c√°c n·ªÅn t·∫£ng m√† kh√¥ng c·∫ßn s·ªë c√° nh√¢n. S·ªë n√†y kh√¥ng g·∫Øn v·ªõi th√¥ng tin c√° nh√¢n, kh√¥ng d√πng cho t√†i kho·∫£n quan tr·ªçng.</p>
          <p>Kh√¥ng n√™n d√πng s·ªë t·∫°m th·ªùi cho t√†i kho·∫£n ch√≠nh, t√†i kho·∫£n ch·ª©a th√¥ng tin b·∫£o m·∫≠t.</p>
        </>
      ),
    },
    'C√≥ s·ªë d√πng l√¢u d√†i kh√¥ng?': {
      title: 'C√≥ s·ªë d√πng l√¢u d√†i kh√¥ng?',
      content: (
        <>
          <p>5SIM ch·ªâ cung c·∫•p s·ªë t·∫°m th·ªùi, th·ªùi gian s·ª≠ d·ª•ng t·ª´ 10-20 ph√∫t. Hi·ªán ch∆∞a h·ªó tr·ª£ thu√™ s·ªë l√¢u d√†i.</p>
          <p>B·∫°n c√≥ th·ªÉ ƒë·ªÉ l·∫°i y√™u c·∫ßu, ch√∫ng t√¥i s·∫Ω li√™n h·ªá khi c√≥ d·ªãch v·ª• thu√™ s·ªë l√¢u d√†i.</p>
        </>
      ),
    },
    'Th√¥ng b√°o "Kh√¥ng ƒë·ªß ti·ªÅn"': {
      title: 'Th√¥ng b√°o "Kh√¥ng ƒë·ªß ti·ªÅn"',
      content: (
        <>
          <p>N·∫øu ch·ªçn nh√† m·∫°ng "B·∫•t k·ª≥", h·ªá th·ªëng s·∫Ω hi·ªÉn th·ªã gi√° th·∫•p nh·∫•t. N·∫øu kh√¥ng c√≤n s·ªë ·ªü m·ª©c gi√° ƒë√≥, b·∫°n s·∫Ω ƒë∆∞·ª£c cung c·∫•p s·ªë c·ªßa nh√† m·∫°ng kh√°c v·ªõi gi√° cao h∆°n.</p>
          <p>V√¨ v·∫≠y, c√≥ th·ªÉ b·∫°n s·∫Ω th·∫•y th√¥ng b√°o n√†y khi s·ªë gi√° r·∫ª ƒë√£ h·∫øt.</p>
        </>
      ),
    },
    'Th√¥ng b√°o "ƒê√°nh gi√° th·∫•p"': {
      title: 'Th√¥ng b√°o "ƒê√°nh gi√° th·∫•p"',
      content: (
        <>
          <p>N·∫øu b·∫°n h·ªßy ho·∫∑c b√°o c√°o s·ªë nhi·ªÅu l·∫ßn, t√†i kho·∫£n s·∫Ω b·ªã ƒë√°nh gi√° th·∫•p v√† c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø mua s·ªë trong 1 gi·ªù.</p>
        </>
      ),
    },
    'T√¥i kh√¥ng th·ªÉ t·∫°o t√†i kho·∫£n 5SIM': {
      title: 'T√¥i kh√¥ng th·ªÉ t·∫°o t√†i kho·∫£n 5SIM',
      content: (
        <>
          <p>B·∫°n c·∫ßn x√°c minh email ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω. H√£y ki·ªÉm tra h·ªôp th∆∞ (bao g·ªìm c·∫£ m·ª•c Spam) v√† l√†m theo h∆∞·ªõng d·∫´n trong email x√°c nh·∫≠n.</p>
        </>
      ),
    },
    'Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c b·∫±ng t√†i kho·∫£n/m·∫≠t kh·∫©u': {
      title: 'Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c b·∫±ng t√†i kho·∫£n/m·∫≠t kh·∫©u',
      content: (
        <>
          <ol>
            <li>Ki·ªÉm tra l·∫°i th√¥ng tin ƒëƒÉng nh·∫≠p. N·∫øu qu√™n m·∫≠t kh·∫©u, h√£y s·ª≠ d·ª•ng ch·ª©c nƒÉng qu√™n m·∫≠t kh·∫©u ƒë·ªÉ ƒë·∫∑t l·∫°i.</li>
            <li>N·∫øu ƒëƒÉng k√Ω qua Google, h√£y ƒëƒÉng nh·∫≠p b·∫±ng n√∫t Google.</li>
            <li>N·∫øu t√†i kho·∫£n b·ªã x√≥a do kh√¥ng s·ª≠ d·ª•ng h∆°n 1 nƒÉm, s·ªë d∆∞ s·∫Ω kh√¥ng ƒë∆∞·ª£c ho√†n l·∫°i.</li>
            <li>Th·ª≠ ƒë·ªïi ƒë·ªãa ch·ªâ IP n·∫øu g·∫∑p l·ªói li√™n quan ƒë·∫øn IP.</li>
          </ol>
        </>
      ),
    },
    'C√°ch ƒë·ªïi email t√†i kho·∫£n 5SIM?': {
      title: 'C√°ch ƒë·ªïi email t√†i kho·∫£n 5SIM?',
      content: (
        <>
          <p>Hi·ªán t·∫°i kh√¥ng h·ªó tr·ª£ ƒë·ªïi email t√†i kho·∫£n. B·∫°n ch·ªâ c√≥ th·ªÉ t·∫°o t√†i kho·∫£n m·ªõi v·ªõi email kh√°c.</p>
        </>
      ),
    },
    'T√†i kho·∫£n b·ªã hack ph·∫£i l√†m sao?': {
      title: 'T√†i kho·∫£n b·ªã hack ph·∫£i l√†m sao?',
      content: (
        <>
          <ol>
            <li>V√†o c√†i ƒë·∫∑t t√†i kho·∫£n, ƒë·ªïi m·∫≠t kh·∫©u v√† tick ch·ªçn ch·∫•m d·ª©t t·∫•t c·∫£ phi√™n ƒëƒÉng nh·∫≠p, kh√≥a API key.</li>
            <li>Kh√¥ng d√πng chung m·∫≠t kh·∫©u cho nhi·ªÅu website.</li>
            <li>Ki·ªÉm tra xem email c√≥ b·ªã l·ªô tr√™n <a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">haveibeenpwned.com</a>.</li>
            <li>Qu√©t virus, ki·ªÉm tra thi·∫øt b·ªã.</li>
            <li>Lu√¥n d√πng proxy/VPN khi thao t√°c API.</li>
          </ol>
        </>
      ),
    },
    'Kh√¥ng nh·∫≠n ƒë∆∞·ª£c SMS th√¨ l√†m g√¨?': {
      title: 'Kh√¥ng nh·∫≠n ƒë∆∞·ª£c SMS th√¨ l√†m g√¨?',
      content: (
        <>
          <p>N·∫øu kh√¥ng nh·∫≠n ƒë∆∞·ª£c SMS, b·∫°n n√™n th·ª≠ mua s·ªë kh√°c ho·∫∑c ƒë·ªïi nh√† m·∫°ng/qu·ªëc gia. ƒê√¥i khi c·∫ßn th·ª≠ l·∫°i v√†i l·∫ßn m·ªõi nh·∫≠n ƒë∆∞·ª£c m√£ do t·ªâ l·ªá th√†nh c√¥ng kh√¥ng ph·∫£i 100%. Xem th·ªëng k√™ t·ªâ l·ªá nh·∫≠n SMS t·∫°i <a href="https://5sim.net/prices" target="_blank" rel="noopener noreferrer">b·∫£ng gi√°</a>.</p>
          <p>H√£y ƒë·∫£m b·∫£o b·∫°n d√πng proxy/VPN ƒë√∫ng qu·ªëc gia, th·ª≠ ƒë·ªïi tr√¨nh duy·ªát ho·∫∑c thi·∫øt b·ªã n·∫øu v·∫´n kh√¥ng nh·∫≠n ƒë∆∞·ª£c m√£.</p>
          <p>N·∫øu kh√¥ng nh·∫≠n ƒë∆∞·ª£c SMS, ti·ªÅn s·∫Ω t·ª± ƒë·ªông ho√†n v·ªÅ t√†i kho·∫£n sau khi ƒë∆°n h√†ng k·∫øt th√∫c.</p>
        </>
      ),
    },
    'M√£ x√°c nh·∫≠n sai': {
      title: 'M√£ x√°c nh·∫≠n sai',
      content: (
        <>
          <p>N·∫øu m√£ x√°c nh·∫≠n b·∫°n nh·∫≠n ƒë∆∞·ª£c kh√¥ng h·ª£p l·ªá, ƒë·ªÉ ƒë∆∞·ª£c ho√†n ti·ªÅn b·∫°n c·∫ßn:</p>
          <ol>
            <li>G·ª≠i s·ªë ƒë∆°n h√†ng ho·∫∑c s·ªë ƒëi·ªán tho·∫°i ƒë√£ mua.</li>
            <li>ƒê√≠nh k√®m ·∫£nh ch·ª•p m√†n h√¨nh qu√° tr√¨nh ƒëƒÉng k√Ω, trong ƒë√≥ hi·ªÉn th·ªã r√µ s·ªë ƒëi·ªán tho·∫°i, th·ªùi gian ƒëƒÉng k√Ω, m√£ x√°c nh·∫≠n nh·∫≠n ƒë∆∞·ª£c v√† c·∫£nh b√°o m√£ sai.</li>
          </ol>
          <p>B·∫°n c≈©ng c√≥ th·ªÉ quay video qu√° tr√¨nh n·∫øu c·∫ßn.</p>
        </>
      ),
    },
    'S·ªë ƒëi·ªán tho·∫°i ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng': {
      title: 'S·ªë ƒëi·ªán tho·∫°i ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng',
      content: (
        <>
          <p>N·∫øu s·ªë ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng, ƒë·ªÉ ho√†n ti·ªÅn b·∫°n c·∫ßn:</p>
          <ol>
            <li>G·ª≠i s·ªë ƒë∆°n h√†ng ho·∫∑c s·ªë ƒëi·ªán tho·∫°i ƒë√£ mua.</li>
            <li>B·∫ÆT BU·ªòC g·ª≠i ·∫£nh ch·ª•p m√†n h√¨nh qu√° tr√¨nh ƒëƒÉng k√Ω, trong ƒë√≥ hi·ªÉn th·ªã r√µ s·ªë ƒëi·ªán tho·∫°i, th·ªùi gian ƒëƒÉng k√Ω, m√£ x√°c nh·∫≠n v√† c·∫£nh b√°o s·ªë ƒë√£ d√πng.</li>
            <li>M·ªói ng√†y ch·ªâ ho√†n t·ªëi ƒëa 3 ƒë∆°n cho m·ªói qu·ªëc gia + nh√† m·∫°ng.</li>
          </ol>
          <p>N·∫øu b·∫°n d√πng app, h√£y g·ª≠i video qu√° tr√¨nh thao t√°c v√† c·∫£nh b√°o s·ªë ƒë√£ d√πng.</p>
        </>
      ),
    },
    'L√†m sao nh·∫≠n l·∫°i m√£ x√°c th·ª±c?': {
      title: 'L√†m sao nh·∫≠n l·∫°i m√£ x√°c th·ª±c?',
      content: (
        <>
          <p>Sau khi nh·∫≠n SMS ƒë·∫ßu ti√™n, b·∫°n c√≥ th·ªÉ nh·∫≠n th√™m m√£ m·ªõi trong v√≤ng 5 ph√∫t (n·∫øu d·ªãch v·ª• h·ªó tr·ª£). M·ªôt s·ªë nh√† m·∫°ng ch·ªâ nh·∫≠n ƒë∆∞·ª£c 1 SMS duy nh·∫•t.</p>
          <p>B·∫°n c√≥ th·ªÉ nh·∫≠n s·ªë l∆∞·ª£ng l·ªõn SMS trong 6-30 ph√∫t v·ªõi c√°c nh√† m·∫°ng h·ªó tr·ª£ nhi·ªÅu l·∫ßn nh·∫≠n m√£.</p>
        </>
      ),
    },
    'C√°ch x√°c th·ª±c qua cu·ªôc g·ªçi?': {
      title: 'C√°ch x√°c th·ª±c qua cu·ªôc g·ªçi?',
      content: (
        <>
          <p>N·∫øu b·∫°n c·∫ßn nh·∫≠n m√£ qua cu·ªôc g·ªçi, h√£y ch·ªçn d·ªãch v·ª• h·ªó tr·ª£ x√°c th·ª±c b·∫±ng cu·ªôc g·ªçi (v√≠ d·ª•: Virtual53, MTS, Yota, Megafon, Beeline...). M√£ x√°c th·ª±c l√† c√°c s·ªë cu·ªëi c·ªßa s·ªë ƒëi·ªán tho·∫°i ho·∫∑c s·∫Ω hi·ªÉn th·ªã tr√™n giao di·ªán nh·∫≠n SMS.</p>
        </>
      ),
    },
    'Nh·∫≠n cu·ªôc g·ªçi v√† m√£ t·ª´ voice bot nh∆∞ th·∫ø n√†o?': {
      title: 'Nh·∫≠n cu·ªôc g·ªçi v√† m√£ t·ª´ voice bot nh∆∞ th·∫ø n√†o?',
      content: (
        <>
          <p>ƒê·ªÉ nh·∫≠n m√£ t·ª´ voice bot, h√£y ch·ªçn qu·ªëc gia M·ªπ v√† nh√† m·∫°ng Virtual28. Khi c√≥ cu·ªôc g·ªçi ƒë·∫øn, h·ªá th·ªëng s·∫Ω hi·ªÉn th·ªã m√£ x√°c th·ª±c tr√™n giao di·ªán nh·∫≠n SMS.</p>
        </>
      ),
    },
    'L√†m sao ƒë·ªÉ n·∫°p ti·ªÅn v√†o t√†i kho·∫£n 5SIM?': {
      title: 'L√†m sao ƒë·ªÉ n·∫°p ti·ªÅn v√†o t√†i kho·∫£n 5SIM?',
      content: (
        <>
          <ol>
            <li>ƒêƒÉng nh·∫≠p t√†i kho·∫£n 5SIM.</li>
            <li>Nh·∫•n v√†o s·ªë d∆∞ v√† ch·ªçn ph∆∞∆°ng th·ª©c n·∫°p ti·ªÅn ph√π h·ª£p.</li>
            <li>Nh·∫≠p s·ªë ti·ªÅn c·∫ßn n·∫°p v√† l√†m theo h∆∞·ªõng d·∫´n ƒë·ªÉ thanh to√°n.</li>
            <li>B·∫°n s·∫Ω ƒë∆∞·ª£c chuy·ªÉn sang trang thanh to√°n, ƒëi·ªÅn th√¥ng tin v√† ho√†n t·∫•t giao d·ªãch.</li>
          </ol>
        </>
      ),
    },
    'Ph√≠ giao d·ªãch': {
      title: 'Ph√≠ giao d·ªãch',
      content: (
        <>
          <p>Khi n·∫°p ti·ªÅn, h·ªá th·ªëng s·∫Ω hi·ªÉn th·ªã r√µ ph√≠ giao d·ªãch v√† t·ª∑ gi√° chuy·ªÉn ƒë·ªïi (n·∫øu c√≥) tr∆∞·ªõc khi b·∫°n x√°c nh·∫≠n thanh to√°n.</p>
        </>
      ),
    },
    'Ti·ªÅn ƒë√£ n·∫°p nh∆∞ng ch∆∞a v√†o t√†i kho·∫£n': {
      title: 'Ti·ªÅn ƒë√£ n·∫°p nh∆∞ng ch∆∞a v√†o t√†i kho·∫£n',
      content: (
        <>
          <p>H√£y ki·ªÉm tra l·∫°i ph∆∞∆°ng th·ª©c thanh to√°n, g·ª≠i bi√™n lai giao d·ªãch cho b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c ki·ªÉm tra v√† c·ªông ti·ªÅn th·ªß c√¥ng n·∫øu c·∫ßn.</p>
        </>
      ),
    },
    'C√°ch r√∫t ti·ªÅn t·ª´ t√†i kho·∫£n 5SIM?': {
      title: 'C√°ch r√∫t ti·ªÅn t·ª´ t√†i kho·∫£n 5SIM?',
      content: (
        <>
          <p>Khi r√∫t ti·ªÅn, h·ªá th·ªëng s·∫Ω hi·ªÉn th·ªã c√°c l∆∞u √Ω v·ªÅ ph√≠ v√† ƒëi·ªÅu ki·ªán r√∫t. B·∫°n n√™n s·ª≠ d·ª•ng h·∫øt s·ªë d∆∞ trong h·ªá th·ªëng ƒë·ªÉ tr√°nh m·∫•t ph√≠ kh√¥ng c·∫ßn thi·∫øt.</p>
        </>
      ),
    },
    'Chuy·ªÉn ti·ªÅn sang t√†i kho·∫£n 5SIM kh√°c': {
      title: 'Chuy·ªÉn ti·ªÅn sang t√†i kho·∫£n 5SIM kh√°c',
      content: (
        <>
          <p>Hi·ªán t·∫°i kh√¥ng th·ªÉ chuy·ªÉn ti·ªÅn gi·ªØa c√°c t√†i kho·∫£n 5SIM.</p>
        </>
      ),
    },
    'T√¥i kh√¥ng th·ªÉ t·∫°o t√†i kho·∫£n 5SIM': {
      title: 'T√¥i kh√¥ng th·ªÉ t·∫°o t√†i kho·∫£n 5SIM',
      content: (
        <>
          <p>B·∫°n c·∫ßn x√°c minh email ƒë·ªÉ ho√†n t·∫•t ƒëƒÉng k√Ω. H√£y ki·ªÉm tra h·ªôp th∆∞ (bao g·ªìm c·∫£ m·ª•c Spam) v√† l√†m theo h∆∞·ªõng d·∫´n trong email x√°c nh·∫≠n.</p>
        </>
      ),
    },
    'Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c b·∫±ng t√†i kho·∫£n/m·∫≠t kh·∫©u': {
      title: 'Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c b·∫±ng t√†i kho·∫£n/m·∫≠t kh·∫©u',
      content: (
        <>
          <ol>
            <li>Ki·ªÉm tra l·∫°i email v√† m·∫≠t kh·∫©u ƒë√£ nh·∫≠p ƒë√∫ng ch∆∞a.</li>
            <li>N·∫øu ƒëƒÉng k√Ω qua Google, h√£y ƒëƒÉng nh·∫≠p b·∫±ng n√∫t Google.</li>
            <li>N·∫øu t√†i kho·∫£n b·ªã x√≥a do kh√¥ng s·ª≠ d·ª•ng h∆°n 1 nƒÉm, s·ªë d∆∞ s·∫Ω kh√¥ng ƒë∆∞·ª£c ho√†n l·∫°i.</li>
            <li>Th·ª≠ ƒë·ªïi ƒë·ªãa ch·ªâ IP n·∫øu g·∫∑p l·ªói li√™n quan ƒë·∫øn IP.</li>
          </ol>
        </>
      ),
    },
    'C√°ch ƒë·ªïi email t√†i kho·∫£n 5SIM?': {
      title: 'C√°ch ƒë·ªïi email t√†i kho·∫£n 5SIM?',
      content: (
        <>
          <p>Hi·ªán t·∫°i kh√¥ng h·ªó tr·ª£ ƒë·ªïi email t√†i kho·∫£n. B·∫°n ch·ªâ c√≥ th·ªÉ t·∫°o t√†i kho·∫£n m·ªõi v·ªõi email kh√°c.</p>
        </>
      ),
    },
    'T√†i kho·∫£n b·ªã hack ph·∫£i l√†m sao?': {
      title: 'T√†i kho·∫£n b·ªã hack ph·∫£i l√†m sao?',
      content: (
        <>
          <ol>
            <li>V√†o c√†i ƒë·∫∑t t√†i kho·∫£n, ƒë·ªïi m·∫≠t kh·∫©u v√† tick ch·ªçn ch·∫•m d·ª©t t·∫•t c·∫£ phi√™n ƒëƒÉng nh·∫≠p, kh√≥a API key.</li>
            <li>Kh√¥ng d√πng chung m·∫≠t kh·∫©u cho nhi·ªÅu website.</li>
            <li>Ki·ªÉm tra xem email c√≥ b·ªã l·ªô tr√™n <a href="https://haveibeenpwned.com/" target="_blank" rel="noopener noreferrer">haveibeenpwned.com</a>.</li>
            <li>Qu√©t virus, ki·ªÉm tra thi·∫øt b·ªã.</li>
            <li>Lu√¥n d√πng proxy/VPN khi thao t√°c API.</li>
          </ol>
        </>
      ),
    },
    'L√†m sao l·∫•y API key?': {
      title: 'L√†m sao l·∫•y API key?',
      content: (
        <>
          <ol>
            <li>V√†o m·ª•c "H·ªì s∆°" tr√™n website.</li>
            <li>Ch·ªçn "L·∫•y API key".</li>
            <li>N·∫øu ph·∫ßn m·ªÅm c√≥ 5sim.net, ch·ªçn "API key 5SIM protocol". N·∫øu kh√¥ng, ch·ªçn "API key API1 protocol (Deprecated API)".</li>
          </ol>
        </>
      ),
    },
    'Mua s·ªë qua API': {
      title: 'Mua s·ªë qua API',
      content: (
        <>
          <p>Xem t√†i li·ªáu API t·∫°i <a href="https://5sim.net/manual" target="_blank" rel="noopener noreferrer">https://5sim.net/manual</a> ƒë·ªÉ bi·∫øt c√°ch mua s·ªë qua API.</p>
          <p>API h·ªó tr·ª£ nhi·ªÅu ph·∫ßn m·ªÅm, c√≥ th·ªÉ nh·∫≠n hoa h·ªìng cho m·ªói ƒë∆°n h√†ng qua API.</p>
        </>
      ),
    },
    'IP b·ªã ch·∫∑n': {
      title: 'IP b·ªã ch·∫∑n',
      content: (
        <>
          <p>N·∫øu IP b·ªã ch·∫∑n, c√≥ th·ªÉ do v∆∞·ª£t qu√° gi·ªõi h·∫°n truy c·∫≠p. Xem chi ti·∫øt t·∫°i <a href="https://docs.5sim.net/ru/#c897b4c6d4" target="_blank" rel="noopener noreferrer">docs.5sim.net</a>. H√£y th·ª≠ ƒë·ªïi m·∫°ng ho·∫∑c d√πng VPN/proxy.</p>
        </>
      ),
    },
    'T√≠ch h·ª£p 5SIM v√†o ph·∫ßn m·ªÅm': {
      title: 'T√≠ch h·ª£p 5SIM v√†o ph·∫ßn m·ªÅm',
      content: (
        <>
          <p>Xem t√†i li·ªáu API ƒë·ªÉ bi·∫øt c√°ch t√≠ch h·ª£p 5SIM v√†o ph·∫ßn m·ªÅm c·ªßa b·∫°n.</p>
        </>
      ),
    },
    'B√°n s·ªë tr√™n n·ªÅn t·∫£ng 5SIM': {
      title: 'B√°n s·ªë tr√™n n·ªÅn t·∫£ng 5SIM',
      content: (
        <>
          <p>Li√™n h·ªá v·ªõi ƒë·ªôi ng≈© 5SIM ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt v·ªÅ vi·ªác h·ª£p t√°c b√°n s·ªë.</p>
        </>
      ),
    },
  };

  // X·ª≠ l√Ω click v√†o c√¢u h·ªèi FAQ
  const handleFaqClick = (question) => {
    setFaqDetail(question);
  };

  // X·ª≠ l√Ω quay l·∫°i danh s√°ch FAQ
  const handleFaqBack = () => {
    setFaqDetail(null);
  };

  const [page, setPage] = useState(1);
  const PAGE_SIZE = 20; // Gi·∫£m t·ª´ 50 xu·ªëng 20 ƒë·ªÉ tƒÉng performance
  const pagedPriceData = useMemo(() => {
    const paged = sortedPriceData.slice((page-1)*PAGE_SIZE, page*PAGE_SIZE);

    return paged;
  }, [sortedPriceData, page]);
  const totalPages = Math.ceil(sortedPriceData.length / PAGE_SIZE);
  
  // Loading effect khi chuy·ªÉn tab
  useEffect(() => {
    if (activePage === 'nav_price') {
      setIsLoading(true);
      setTimeout(() => setIsLoading(false), 100);
    }
  }, [activePage, priceTab]);

  if (activePage === 'login') {
    return (
      <div style={{display:'flex',justifyContent:'center',alignItems:'center',minHeight:'70vh',width:'100%'}}>
        <div style={{maxWidth:420,width:'100%',margin:'0 auto',padding:'2.5rem 2.2rem',boxShadow:'0 4px 32px #0002',borderRadius:20,background:'#fff'}}>
          <h2 style={{textAlign:'center',marginBottom:18,fontWeight:700,fontSize:'1.7rem'}}>Log in with the help</h2>
          <button style={{width:'100%',display:'flex',alignItems:'center',justifyContent:'center',gap:10,padding:'10px 0',background:'#fff',border:'1.5px solid #e5e7eb',borderRadius:10,fontWeight:600,fontSize:'1rem',marginBottom:18,cursor:'pointer'}}>
            <FaGoogle style={{fontSize:20}}/> Sign in with Google
          </button>
          <div style={{display:'flex',alignItems:'center',gap:10,margin:'18px 0'}}>
            <div style={{flex:1,height:1,background:'#e5e7eb'}}></div>
            <span style={{color:'#888',fontWeight:500}}>OR</span>
            <div style={{flex:1,height:1,background:'#e5e7eb'}}></div>
          </div>
          <LoginForm onLoginSuccess={onLoginSuccess} onClose={() => setActivePage('nav_home')} />
          <div style={{marginTop:18,textAlign:'center',fontSize:'0.97rem',color:'#444'}}>
            Do not have account? <a href="#" style={{color:'#2563eb',fontWeight:600,textDecoration:'none'}}>Registration</a>
          </div>
        </div>
      </div>
    );
  }

  if (activePage === 'nav_payment') {
    return <PaymentPage user={user} />;
  }

  if (activePage === 'purchase') {
    return (
      <div className={styles.purchaseCard}>
        <div className={styles.purchaseTabs}>
          <button className={purchaseTab === 'active' ? styles.purchaseTabActive : styles.purchaseTab} onClick={() => setPurchaseTab('active')}>Active orders</button>
          <button className={purchaseTab === 'history' ? styles.purchaseTabActive : styles.purchaseTab} onClick={() => setPurchaseTab('history')}>Order history</button>
        </div>
        <div className={styles.purchaseContent}>
          {purchaseTab === 'active' ? (
            <div className={styles.purchaseEmpty}>
              <div style={{fontWeight: 600, fontSize: 20, marginBottom: 8}}>No active orders</div>
              <div style={{color: '#888', marginBottom: 24}}>You have not purchased any numbers yet.</div>
              <ol style={{textAlign:'left', color:'#444', maxWidth:420}}>
                <li><b>Top Up your Balance:</b> Add funds to your balance via any of the payment methods offered by our website.</li>
                <li><b>Select a Service:</b> In the left panel you can choose the service you need.</li>
                <li><b>Select a Country:</b> Choose the country and operator you need.</li>
                <li><b>Apply the Phone Number:</b> Press the cart button to buy the number, then paste the number where required.</li>
              </ol>
            </div>
          ) : (
            <div className={styles.purchaseEmpty}>
              <div style={{fontWeight: 600, fontSize: 20, marginBottom: 8}}>No orders found</div>
              <div style={{color: '#888'}}>You have not purchased any numbers yet.</div>
            </div>
          )}
        </div>
      </div>
    );
  }

  const statsDisplayData = sortedStatsData.slice(0, 20);
  const statsMinPrice = statsDisplayData.length > 0 ? Math.min(...statsDisplayData.map(r => r.price)) : 0;
  const statsMaxPrice = statsDisplayData.length > 0 ? Math.max(...statsDisplayData.map(r => r.price)) : 1;

  return (
    <div className={styles.homepage}>
      <div className={styles.card}>
        {/* Trang ch·ªß */}
        {activePage === 'nav_home' && (
          <>
            {/* Gi·ªõi thi·ªáu d·ªãch v·ª• */}
            <div className={styles.section}>
              <h4 className={styles.sectionTitle}>{t('main_home_title')}</h4>
              <p className={styles.descriptionText}>{t('main_home_desc')}</p>
            </div>
            {/* L·ª£i √≠ch n·ªïi b·∫≠t */}
            <div className={styles.infoGrid}>
              <div className={styles.infoCard}>
                <div className={styles.infoIcon}>üì±</div>
                <div>
                  <div className={styles.infoTitle}>{t('main_benefit_phones_title')}</div>
                  <div className={styles.infoDesc}>{t('main_benefit_phones_desc')}</div>
                </div>
              </div>
              <div className={styles.infoCard}>
                <div className={styles.infoIcon}>üÜï</div>
                <div>
                  <div className={styles.infoTitle}>{t('main_benefit_new_title')}</div>
                  <div className={styles.infoDesc}>{t('main_benefit_new_desc')}</div>
                </div>
              </div>
              <div className={styles.infoCard}>
                <div className={styles.infoIcon}>üîÑ</div>
                <div>
                  <div className={styles.infoTitle}>{t('main_benefit_sms_title')}</div>
                  <div className={styles.infoDesc}>{t('main_benefit_sms_desc')}</div>
                </div>
              </div>
              <div className={styles.infoCard}>
                <div className={styles.infoIcon}>üë®‚Äçüíª</div>
                <div>
                  <div className={styles.infoTitle}>{t('main_benefit_dev_title')}</div>
                  <div className={styles.infoDesc}>{t('main_benefit_dev_desc')}</div>
                </div>
              </div>
              <div className={styles.infoCard}>
                <div className={styles.infoIcon}>üí∏</div>
                <div>
                  <div className={styles.infoTitle}>{t('main_benefit_fee_title')}</div>
                  <div className={styles.infoDesc}>{t('main_benefit_fee_desc')}</div>
                </div>
              </div>
              <div className={styles.infoCard}>
                <div className={styles.infoIcon}>‚è∞</div>
                <div>
                  <div className={styles.infoTitle}>{t('main_benefit_support_title')}</div>
                  <div className={styles.infoDesc}>{t('main_benefit_support_desc')}</div>
                </div>
              </div>
            </div>
            {/* Ai n√™n d√πng */}
            <div className={styles.section}>
              <h3 className={styles.sectionSubtitle}>{t('main_who_title')}</h3>
              <ul className={styles.benefitList}>
                <li>{t('main_who_privacy')}</li>
                <li>{t('main_who_mmo')}</li>
                <li>{t('main_who_dev')}</li>
                <li>{t('main_who_anyone')}</li>
              </ul>
            </div>
            {/* H∆∞·ªõng d·∫´n nh·∫≠n SMS */}
            <div className={styles.section}>
              <h3 className={styles.sectionSubtitle}>{t('main_guide_title')}</h3>
              <div className={styles.guideGrid}>
                <div className={styles.guideStep}>
                  <div className={styles.guideNum}>1</div>
                  <div>
                    <div className={styles.guideTitle}>{t('main_guide_step1_title')}</div>
                    <div className={styles.guideDesc}>{t('main_guide_step1_desc')}</div>
                  </div>
                </div>
                <div className={styles.guideStep}>
                  <div className={styles.guideNum}>2</div>
                  <div>
                    <div className={styles.guideTitle}>{t('main_guide_step2_title')}</div>
                    <div className={styles.guideDesc}>{t('main_guide_step2_desc')}</div>
                  </div>
                </div>
                <div className={styles.guideStep}>
                  <div className={styles.guideNum}>3</div>
                  <div>
                    <div className={styles.guideTitle}>{t('main_guide_step3_title')}</div>
                    <div className={styles.guideDesc}>{t('main_guide_step3_desc')}</div>
                  </div>
                </div>
              </div>
            </div>
          </>
        )}
        {/* FAQ */}
        {activePage === 'nav_faq' && (
          <>
            <h2 className={styles.sectionTitle}>{t('faq_title')}</h2>
            <div className={styles.faqSection}>
              {!faqDetail ? (
                <>
                  <div className={styles.faqGrid}>
                    <div className={styles.faqCol}>
                      <div className={styles.faqGroup}><span className={styles.faqIcon}>‚ùì</span> <span className={styles.faqGroupTitle}>{t('faq_common_questions')}</span></div>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Khi n√†o c√≥ s·ªë m·ªõi ƒë∆∞·ª£c th√™m v√†o?')}>{t('faq_new_numbers')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('T√†i kho·∫£n v·ª´a t·∫°o b·ªã kh√≥a sau m·ªôt th·ªùi gian')}>{t('faq_account_locked')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('C√≥ s·ªë tr√™n website nh∆∞ng kh√¥ng th·ªÉ mua ƒë∆∞·ª£c')}>{t('faq_cannot_buy')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('S·ªë t·∫°m th·ªùi l√† g√¨?')}>{t('faq_temporary_number')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('C√≥ s·ªë d√πng l√¢u d√†i kh√¥ng?')}>{t('faq_long_term_number')}</a>
                    </div>
                    <div className={styles.faqCol}>
                      <div className={styles.faqGroup}><span className={styles.faqIcon}>‚ùì</span> <span className={styles.faqGroupTitle}>{t('faq_technical_questions')}</span></div>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('T√¥i kh√¥ng th·ªÉ t·∫°o t√†i kho·∫£n 5SIM')}>{t('faq_cannot_create_account')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Kh√¥ng ƒëƒÉng nh·∫≠p ƒë∆∞·ª£c b·∫±ng t√†i kho·∫£n/m·∫≠t kh·∫©u')}>{t('faq_login_issue')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('C√°ch ƒë·ªïi email t√†i kho·∫£n 5SIM?')}>{t('faq_change_email')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('T√†i kho·∫£n b·ªã hack ph·∫£i l√†m sao?')}>{t('faq_account_hacked')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('L√†m sao l·∫•y API key?')}>{t('faq_get_api_key')}</a>
                    </div>
                    <div className={styles.faqCol}>
                      <div className={styles.faqGroup}><span className={styles.faqIcon}>‚ùì</span> <span className={styles.faqGroupTitle}>{t('faq_sms_questions')}</span></div>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Kh√¥ng nh·∫≠n ƒë∆∞·ª£c SMS th√¨ l√†m g√¨?')}>{t('faq_no_sms')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('M√£ x√°c nh·∫≠n sai')}>{t('faq_wrong_code')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('S·ªë ƒëi·ªán tho·∫°i ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng')}>{t('faq_number_used')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('L√†m sao nh·∫≠n l·∫°i m√£ x√°c th·ª±c?')}>{t('faq_re_code')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('C√°ch x√°c th·ª±c qua cu·ªôc g·ªçi?')}>{t('faq_call_verification')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Nh·∫≠n cu·ªôc g·ªçi v√† m√£ t·ª´ voice bot nh∆∞ th·∫ø n√†o?')}>{t('faq_voice_bot')}</a>
                    </div>
                    <div className={styles.faqCol}>
                      <div className={styles.faqGroup}><span className={styles.faqIcon}>‚ùì</span> <span className={styles.faqGroupTitle}>{t('faq_payment_questions')}</span></div>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('L√†m sao ƒë·ªÉ n·∫°p ti·ªÅn v√†o t√†i kho·∫£n 5SIM?')}>{t('faq_top_up')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Ph√≠ giao d·ªãch')}>{t('faq_transaction_fee')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Ti·ªÅn ƒë√£ n·∫°p nh∆∞ng ch∆∞a v√†o t√†i kho·∫£n')}>{t('faq_funds_not_credited')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('C√°ch r√∫t ti·ªÅn t·ª´ t√†i kho·∫£n 5SIM?')}>{t('faq_withdraw')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Chuy·ªÉn ti·ªÅn sang t√†i kho·∫£n 5SIM kh√°c')}>{t('faq_transfer_funds')}</a>
                    </div>
                    <div className={styles.faqCol}>
                      <div className={styles.faqGroup}><span className={styles.faqIcon}>‚ùì</span> <span className={styles.faqGroupTitle}>{t('faq_api_questions')}</span></div>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('Mua s·ªë qua API')}>{t('faq_api_buy_number')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('IP b·ªã ch·∫∑n')}>{t('faq_ip_blocked')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('T√≠ch h·ª£p 5SIM v√†o ph·∫ßn m·ªÅm')}>{t('faq_integrate_api')}</a>
                      <a href="#" className={styles.faqLink} onClick={() => setFaqDetail('B√°n s·ªë tr√™n n·ªÅn t·∫£ng 5SIM')}>{t('faq_sell_numbers')}</a>
                    </div>
                  </div>
                </>
              ) : (
                <div className={styles.faqDetailBox}>
                  <div className={styles.faqBreadcrumb}>
                    <span className={styles.faqBreadcrumbLink} onClick={() => setFaqDetail(null)}>{t('faq_back_to_faq')}</span>
                    <span className={styles.faqBreadcrumbSep}>/</span>
                    <span>{faqDetail}</span>
                  </div>
                  <h2 className={styles.faqDetailTitle}>{faqDetail}</h2>
                  <div className={styles.faqDetailContent}>{faqDetails[faqDetail]?.content}</div>
                  <button className={styles.faqBackBtn} onClick={() => setFaqDetail(null)}>{t('faq_back_to_faq')}</button>
                </div>
              )}
            </div>
          </>
        )}
        {/* Price */}
        {activePage === 'nav_price' && (
          <>
            <div className={styles.priceHeader}>
              <div className={styles.priceTabs}>
                <button className={priceTab === 'price' ? styles.priceTabActive : styles.priceTab} onClick={() => setPriceTab('price')}>{t('price_table_tab')}</button>
                <button className={priceTab === 'stats' ? styles.priceTabActive : styles.priceTab} onClick={() => setPriceTab('stats')}>{t('stats_tab')}</button>
              </div>
              <div className={styles.priceTitle}>{priceTab === 'price' ? t('price_table_title') : t('stats_title')}</div>
            </div>
            {priceTab === 'price' && (
              <>
                <div className={styles.priceFilters}>
                  <button className={styles.priceFilterBtn}>‚≠ê {t('price_favorite_services')}</button>
                  <button className={styles.priceFilterBtn}>‚≠ê {t('price_favorite_countries')}</button>
                  <select className={styles.priceSelect} value={filterService} onChange={e => setFilterService(e.target.value)}>
                    {serviceOptions.map(opt => <option key={opt} value={opt}>{opt === allKey ? t('all') : opt}</option>)}
                  </select>
                  <select className={styles.priceSelect} value={filterCountry} onChange={e => setFilterCountry(e.target.value)}>
                    {countryOptions.map(opt => <option key={opt} value={opt}>{opt === allKey ? t('all') : opt}</option>)}
                  </select>
                  <select className={styles.priceSelect}><option>{t('price_sort_by_price')}</option><option>{t('price_sort_low_to_high')}</option><option>{t('price_sort_high_to_low')}</option></select>
                  <select className={styles.priceSelect}><option>{t('price_time_period')}</option><option>{t('price_3_days')}</option><option>{t('price_7_days')}</option></select>
                  <button className={styles.priceFilterBtn}>{t('price_csv_export')}</button>
                </div>
                <div className={styles.priceNote}>{t('price_success_rate_note')}</div>
                <div className={styles.priceTableWrapper}>
                  <table className={styles.priceTable}>
                    <thead>
                      <tr>
                        <th className={`sortable ${priceSortBy==='service' ? 'sorted' : ''}`} onClick={() => {setPriceSortBy('service');setPriceSortOrder(priceSortOrder==='desc'?'asc':'desc')}}>{t('price_service')}</th>
                        <th className={`sortable ${priceSortBy==='country' ? 'sorted ' + (priceSortOrder==='desc' ? 'sorted-desc' : 'sorted-asc') : ''}`} onClick={() => {setPriceSortBy('country');setPriceSortOrder(priceSortOrder==='desc'?'asc':'desc')}}>{t('price_country')}</th>
                        <th>{t('price_operator')}</th>
                        <th className={`sortable ${priceSortBy==='rate' ? 'sorted ' + (priceSortOrder==='desc' ? 'sorted-desc' : 'sorted-asc') : ''}`} onClick={() => {setPriceSortBy('rate');setPriceSortOrder(priceSortOrder==='desc'?'asc':'desc')}}>{t('price_rate')}</th>
                        <th>{t('price_quantity')}</th>
                        <th className={`sortable ${priceSortBy==='price' ? 'sorted ' + (priceSortOrder==='desc' ? 'sorted-desc' : 'sorted-asc') : ''}`} onClick={() => {setPriceSortBy('price');setPriceSortOrder(priceSortOrder==='desc'?'asc':'desc')}}>{t('price_price')}</th>
                        <th></th>
                      </tr>
                    </thead>
                    <tbody>
                      {pagedPriceData.map((row, idx) => (
                        <tr key={row.service + row.country + row.operator}>
                          <td>{row.service}</td>
                          <td>{row.country}</td>
                          <td>{row.operator}</td>
                          <td>{row.rate !== null ? row.rate + '%' : 'n/a'}</td>
                          <td>{row.count ?? ''}</td>
                          <td>{currency === 'rub' ? row.price : Math.round(row.price * RUB_TO_VND)}{currency === 'rub' ? '‚ÇΩ' : '‚Ç´'}</td>
                          <td><button className={styles.buyBtn}>{t('price_buy_button')}</button></td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
                <div style={{display:'flex',justifyContent:'center',alignItems:'center',gap:12,margin:'16px 0'}}>
                  <button disabled={page === 1} onClick={() => setPage(page-1)}>&lt; Prev</button>
                  <span>Trang {page}/{totalPages}</span>
                  <button disabled={page === totalPages} onClick={() => setPage(page+1)}>Next &gt;</button>
                </div>
              </>
            )}
            {priceTab === 'stats' && (
              <div className={styles.priceStatsBox}>
                <div className={styles.priceStatsTitle}>{t('stats_title')}</div>
                <div className={styles.statsChartHeaderGrid}>
                  <div className={styles.statsChartHeaderCol}>
                    <span className={styles.statsChartHeaderLabel}>{t('stats_success_rate')}</span>
                    <span className={styles.statsChartHeaderCell} onClick={() => {setStatsSortBy('rate');setStatsSortOrder(statsSortOrder==='desc'?'asc':'desc')}}>
                      ({t('stats_rate_percent')}) {statsSortBy==='rate' ? (statsSortOrder==='desc'?'‚ñº':'‚ñ≤') : ''}
                    </span>
                  </div>
                  <div className={styles.statsChartHeaderCol}>
                    <span className={styles.statsChartHeaderLabel}>{t('stats_number_price')}</span>
                    <span className={styles.statsChartHeaderCell} onClick={() => {setStatsSortBy('price');setStatsSortOrder(statsSortOrder==='desc'?'asc':'desc')}}>
                      ({t('stats_price_ruble')}) {statsSortBy==='price' ? (statsSortOrder==='desc'?'‚ñº':'‚ñ≤') : ''}
                    </span>
                  </div>
                </div>
                <div className={styles.statsChartList}>
                  {statsDisplayData.map((row, idx) => {
                    const pricePercent = ((row.price - statsMinPrice) / (statsMaxPrice - statsMinPrice + 1e-6)) * 100;
                    return (
                      <div className={styles.statsChartRow} key={idx}>
                        <div className={styles.statsChartInfo}>
                          <span className={styles.statsChartCountry}>{row.country}</span>
                          <span className={styles.statsChartOp}>{row.operator}</span>
                        </div>
                        <div className={styles.statsChartBars}>
                          <div className={styles.statsBarWrap}>
                            <div
                              className={styles.statsBarGreen}
                              style={{width: `${row.rate}%`}}
                              onMouseEnter={() => setHoveredBar(`rate${idx}`)}
                              onMouseLeave={() => setHoveredBar(null)}
                            ></div>
                            <span className={styles.statsBarValueRight}>{row.rate}%</span>
                            {hoveredBar === `rate${idx}` && (
                              <div className="statsTooltip">{t('stats_tooltip_rate')}: {row.rate}%</div>
                            )}
                          </div>
                          <div className={styles.statsBarWrap}>
                            <div
                              className={styles.statsBarBlue}
                              style={{width: `${pricePercent}%`}}
                              onMouseEnter={() => setHoveredBar(`price${idx}`)}
                              onMouseLeave={() => setHoveredBar(null)}
                            ></div>
                            <span className={styles.statsBarValueRight}>{currency === 'rub' ? row.price : Math.round(row.price * RUB_TO_VND)}{currency === 'rub' ? '‚ÇΩ' : '‚Ç´'}</span>
                            {hoveredBar === `price${idx}` && (
                              <div className="statsTooltip">{t('stats_tooltip_price')}: {currency === 'rub' ? row.price : Math.round(row.price * RUB_TO_VND)}{currency === 'rub' ? '‚ÇΩ' : '‚Ç´'}</div>
                            )}
                          </div>
                        </div>
                        <button className={styles.statsBuyBtn}>{t('price_buy_button')}</button>
                      </div>
                    );
                  })}
                </div>
              </div>
            )}
          </>
        )}
        {/* Blog */}
        {activePage === 'nav_blog' && (
          <>
            <h2 className={styles.sectionTitle}>{t('blog_title')}</h2>
            <div className={styles.blogWrap}>
              <div className={styles.blogMain}>
                {/* Danh s√°ch b√†i vi·∫øt m·∫´u */}
                {[{
                  title: t('blog_ebay_title'),
                  date: '27/04/2023',
                  read: '4 ph√∫t',
                  desc: t('blog_ebay_desc')
                },{
                  title: t('blog_kwai_title'),
                  date: '27/04/2023',
                  read: '4 ph√∫t',
                  desc: t('blog_kwai_desc')
                }].map((post, idx) => (
                  <div className={styles.blogCard} key={idx}>
                    <div className={styles.blogTitle}>{post.title}</div>
                    <div className={styles.blogMeta}>{post.date} ¬∑ {post.read}</div>
                    <div className={styles.blogDesc}>{post.desc}</div>
                  </div>
                ))}
              </div>
              <div className={styles.blogSidebar}>
                <div className={styles.blogSidebarTitle}>{t('blog_new_posts')}</div>
                <ul className={styles.blogSidebarList}>
                  <li>{t('blog_ebay_post')}</li>
                  <li>{t('blog_kwai_post')}</li>
                </ul>
              </div>
            </div>
          </>
        )}
        {/* How to buy */}
        {activePage === 'nav_howto' && (
          <>
            <h2 className={styles.sectionTitle}>{t('howto_title')}</h2>
            <div className={styles.timeline}>
              {[1,2,3,4,5,6,7].map(step => (
                <div className={styles.timelineStep} key={step}>
                  <div className={styles.timelineIcon}>{step}</div>
                  <div className={styles.timelineContent}><b>{t(`howto_step${step}_title`)}</b><span className={styles.timelineNote}>{t(`howto_step${step}_note`)}</span></div>
                  <div className={styles.timelineLine}></div>
                </div>
              ))}
            </div>
            <div className={styles.infoBox}>
              <b>{t('howto_note_attention')}</b>
              <ul>
                <li>{t('howto_note_auto_refund')}</li>
                <li>{t('howto_note_do_not_use_for_forbidden')}</li>
                <li>{t('howto_note_support')}</li>
              </ul>
            </div>
          </>
        )}
        {/* Free */}
        {activePage === 'nav_free' && (
          <>
            <h2 className={styles.sectionTitle}>{t('free_title')}</h2>
            <p className={styles.descriptionText}>{t('free_desc')}</p>
            <div className={styles.freeBoxWrap}>
              <div className={styles.freeBox}>
                <h3>{t('free_choose_number')}</h3>
                <div className={styles.freeBoxEmpty}>{t('free_no_numbers_available')}</div>
              </div>
              <div className={styles.freeBox}>
                <h3>{t('free_messages')}</h3>
                <div className={styles.freeBoxEmpty}>{t('free_no_messages_received')}</div>
              </div>
            </div>
            <div className={styles.freeNote}>{t('free_after_trial')}</div>
          </>
        )}
        {/* API */}
        {activePage === 'nav_api' && (
          <>
            <h2 className={styles.sectionTitle}>{t('api_info_title')}</h2>
            <p className={styles.descriptionText}>{t('api_info_desc')}</p>
            <div className={styles.section}>
              <h3 className={styles.sectionSubtitle}>{t('howto_api_guide_title')}</h3>
              <div className={styles.apiBox}>
                <div><b>{t('api_5sim_is_restful')}</b></div>
                <div>{t('api_add_authorization_header')}</div>
                <div className={styles.apiCodeBlock}>
                  <div>{t('api_example_header')}</div>
                  <pre>Authorization: Bearer {'<API_KEY>'}</pre>
                </div>
                <div className={styles.apiCodeBlock}>
                  <div>{t('api_example_curl')}</div>
                  <pre>curl -H "Authorization: Bearer sk-abc123xyz456" https://5sim.net/v1/user/profile</pre>
                </div>
                <div className={styles.apiNote}>{t('api_see_docs')}</div>
              </div>
            </div>
          </>
        )}
      </div>
    </div>
  );
}

export default MainContent;
